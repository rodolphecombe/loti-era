#textdomain wesnoth-loti-era

#undef NEW_GOLD_CARRYOVER_NOTE_20
#undef NEW_GOLD_CARRYOVER_NOTE_60
#undef NEW_GOLD_CARRYOVER_NOTE_80
#undef DAWN1
#undef DAWN2
#undef MORNING1
#undef MORNING2
#undef MIDDAY1
#undef MIDDAY2
#undef AFTERNOON1
#undef AFTERNOON2
#undef MIDDAY1
#undef MIDDAY2
#undef DUSK1
#undef DUSK2
#undef SHORTDARK
#undef LONGDARK1
#undef LONGDARK2
#undef LONGDARK3
#undef LONGDARK4
#undef TWO_SUNS_DEFAULT_SCHEDULE

#define UPDATE_STATS
	[update_stats]
		x,y=$x1,$y1
	[/update_stats]
#enddef

#define MAKE_BLACK_SOUL
	[fire_event]
		name=make black soul
	[/fire_event]
#enddef

#define NEW_GOLD_CARRYOVER_NOTE_20
	_"
20% of finishing gold carried over to the next scenario."#enddef

#define NEW_GOLD_CARRYOVER_NOTE_80
	_"
80% of finishing gold carried over to the next scenario."#enddef

#define NEW_GOLD_CARRYOVER_NOTE_60
	_"
60% of finishing gold carried over to the next scenario."#enddef

#define CHAPTER_TITLE BACKGROUND NUMBER IMAGE_MOD COMMENT
	[story]
		[part]
			background={BACKGROUND}~BLIT(chapter-text.png{IMAGE_MOD})~BLIT(chapter-text-{NUMBER}.png{IMAGE_MOD})
			story={COMMENT}
		[/part]
	[/story]
#enddef

#define NO_FAST_AI
	[event]
		name=prestart
		{VARIABLE no_fast_ai yes}
	[/event]
	[event]
		name=victory
		id=clear_no_fast_ai
		{CLEAR_VARIABLE no_fast_ai}
	[/event]
#enddef

#define ACHIEVED_5_AMLAS
	[advancement]
		id=backup_amla
	[/advancement]
	[advancement]
		id=backup_amla
	[/advancement]
	[advancement]
		id=backup_amla
	[/advancement]
	[advancement]
		id=backup_amla
	[/advancement]
	[advancement]
		id=backup_amla
	[/advancement]
#enddef
#define MODIFY_SIDE SIDE VAR TO_VAR
	[modify_side]
		side={SIDE}
		{VAR}={TO_VAR}
	[/modify_side]
#enddef
#define GOLD_CHEST X Y
	{PLACE_IMAGE items/chest-plain-closed.png {X} {Y}}
	[event]
		name=moveto
		id=utils_chest_event_{X}_{Y}
		[filter]
			side=$allied_sides
			x,y={X},{Y}
		[/filter]
		[sound]
			name=gold.ogg
		[/sound]
		[message]
			speaker=unit
			message= _ "I have found some gold."
		[/message]
		{VARIABLE gold_amount "$(2d50)"}
		[gold]
			side=$side_number
			amount=$gold_amount
		[/gold]
		{CLEAR_VARIABLE gold_amount}
		[remove_item]
			x,y={X},{Y}
			image=items/chest-plain-closed.png
		[/remove_item]
		{PLACE_IMAGE items/chest-plain-open.png {X} {Y}}
	[/event]

#enddef
#define SCHEDULE_HELL
	[time]
		id=hell
		name= _ "Hell"
		image=misc/schedule-hell.png
		lawful_bonus=0
		red=20
		green=-15
		blue=-20
	[/time]
#enddef
#define SCHEDULE_FLAMING_SKY
	[time]
		id=flaming_sky
		name= _ "Flaming skies"
		image=misc/schedule-fire.png
		lawful_bonus=0
		red=50
		green=20
		blue=0
	[/time]
#enddef
#define GUARDIAN_UNIT SIDE TYPE X Y
	[unit]
		side={SIDE}
		type={TYPE}
		x={X}
		y={Y}
		generate_name=yes
		random_traits=yes
		random_gender=yes
		upkeep=full
		ai_special=guardian
	[/unit]
#enddef
#define BUY_GEM VAR COST
	[show_if]
		[variable]
			name=gold
			greater_than_equal_to={COST}
		[/variable]
	[/show_if]
	[command]
		{VARIABLE_OP {VAR} add 1}
		[gold]
			side=$unit.side
			amount=-{COST}
		[/gold]
		{VARIABLE_OP gold sub {COST}}
	[/command]
#enddef
#define SELL_GEMS
	[option]
		label=_"Buy an obsidian for 5 gold (currently having $obsidians of them)"
		{BUY_GEM obsidians 5}
	[/option]
	[option]
		label=_"Buy a topaz for 9 gold (currently having $topazes of them)"
		{BUY_GEM topazes 9}
	[/option]
	[option]
		label=_"Buy an opal for 16 gold (currently having $opals of them)"
		{BUY_GEM opals 16}
	[/option]
	[option]
		label=_"Buy a pearl for 30 gold (currently having $pearls of them)"
		{BUY_GEM pearls 30}
	[/option]
	[option]
		label=_"Buy a diamond for 55 gold (currently having $diamonds of them)"
		{BUY_GEM diamonds 55}
	[/option]
	[option]
		label=_"Buy a ruby for 100 gold (currently having $rubies of them)"
		{BUY_GEM rubies 100}
	[/option]
	[option]
		label=_"Buy an emerald for 200 gold (currently having $emeralds of them)"
		{BUY_GEM emeralds 200}
	[/option]
	[option]
		label=_"Buy an amethyst for 500 gold (currently having $amethysts of them)"
		{BUY_GEM amethysts 500}
	[/option]
	[option]
		label=_"Buy a sapphire for 1000 gold (currently having $sapphires of them)"
		{BUY_GEM sapphires 1000}
	[/option]
	[option]
		label=_"Buy a black pearl for 2000 gold (currently having $black_pearls of them)"
		{BUY_GEM black_pearls 2000}
	[/option]
#enddef
#define SHOP_ITEM NAME PRICE NUMBER IMAGE VARIABLE_NAME
	[option]
		label={NAME} + " (" + {PRICE} + _" gold)"
		image={IMAGE}
		[command]
			[loti_item_type]
				number={NUMBER}
				to_variable=item_info
			[/loti_item_type]
			[message]
				id=trader
				[or]
					id=trader1
				[/or]
				[or]
					id=trader2
				[/or]
				[or]
					id=trader3
				[/or]
				message= _ "Look at it. Do you really want it?
$item_info.description"
				[option]
					label= _ "Yes."
					[command]
						[if]
							[variable]
								name=gold
								greater_than_equal_to={PRICE}
							[/variable]
							[else]
								[message]
									speaker=trader
									message= _ "You do not have enough gold. Listen, if I sold it to you for less gold, I would not have enough gold to bribe the enemies to leave me alone."
								[/message]
							[/else]
							[then]
								{PLACE_ITEM {NUMBER} $x1 $y1}
								[gold]
									side=$side_number
									amount=-{PRICE}
								[/gold]
								{VARIABLE_OP gold sub {PRICE}}
								{VARIABLE_OP items_dropped add 1}
								{VARIABLE {VARIABLE_NAME} 1}
								[fire_event]
									name=item_pick
									[primary_unit]
										x,y=$x1,$y1
									[/primary_unit]
								[/fire_event]
							[/then]
						[/if]
					[/command]
				[/option]
				[option]
					label= _ "No."
					[command]
					[/command]
				[/option]
			[/message]
			{CLEAR_VARIABLE item_info}
		[/command]
		[show_if]
			[variable]
				name={VARIABLE_NAME}
				not_equals=1
			[/variable]
		[/show_if]
	[/option]
#enddef

#define TRAIT_HIGHLANDER
	[trait]
		id=healthy
		male_name= _"highlander"
		female_name= _"female^highlander"
		generate_description=false
		description= _"Born better than others, 5 more hitpoints + 3 more per level, 1 more damage per level, heals 2 HP every turn"
		[effect]
			apply_to=hitpoints
			increase_total=5
		[/effect]
		[effect]
			apply_to=hitpoints
			times=per level
			increase_total=3
		[/effect]
		[effect]
			apply_to=attack
			times=per level
			increase_damage=1
		[/effect]
	[/trait]
#enddef

#define TRAIT_UNSTABLE
	[trait]
		id=unstable
		availability="musthave"
		name=_"unstable"
		female_name=_"female^unstable"
		generate_description=false
		description= _"This unit is highly unstable.  If you have to hit it, be careful what you use."
	[/trait]
#enddef

#define TRAIT_PERFECTIONIST
	[trait]
		id=perfectionist
		male_name= _"perfectionist"
		female_name= _"female^perfectionist"
		generate_description=false
		description= _"An obsessive attention to detail allows this unit to inflict 50% more damage, while requiring much more XP to advance"
		[effect]
			apply_to=max_experience
#ifdef EASY
			increase=100%
#endif
#ifdef NORMAL
			increase=200%
#endif
#ifdef HARD
			increase=300%
#endif
		[/effect]
		[effect]
			apply_to=attack
			increase_damage=50%
		[/effect]
	[/trait]
#enddef

#define TRAIT_UNSTOPPABLE
	[trait]
		id=unstoppable
		male_name= _"unstoppable"
		female_name= _"female^unstoppable"
		generate_description=false
		description= _"This unit is very unwilling to die when trying to help their friends"
		[effect]
			apply_to=hitpoints
			increase_total=15
		[/effect]
		[effect]
			apply_to=hitpoints
			times=per level
			increase_total=10
		[/effect]
	[/trait]
#enddef

#define TRAIT_THANATOLOGIST
	[trait]
		id=thanatologist
		male_name= _"thanatologist"
		female_name= _"female^thanatologist"
		generate_description=false
		description= _"This unit has good understanding of death, and has made experiments that improved own resistances of pierce, blade and cold"
		[effect]
			apply_to=resistance
			replace=false
			[resistance]
				pierce=-20
				blade=-10
				cold=-20
			[/resistance]
		[/effect]
	[/trait]
#enddef

#define TRAIT_IMPULSIVE
	[trait]
		id=impulsive
		male_name= _"impulsive"
		female_name= _"female^impulsive"
		generate_description=false
		description= _"This unit does not think before acting, and can attack first even when defending"
		[effect]
			apply_to=attack
			[set_specials]
				mode=append
				{WEAPON_SPECIAL_FIRSTSTRIKE}
			[/set_specials]
		[/effect]
	[/trait]
#enddef

#define TRAIT_THERMOPHILE
	[trait]
		id=thermophile
		male_name= _"thermophile"
		female_name= _"female^thermophile"
		generate_description=false
		description= _"This unit liked sitting around lava pools to have developed a liking for hot temperatures"
		[effect]
			apply_to=resistance
			replace=false
			[resistance]
				fire=-60
				cold=10
			[/resistance]
		[/effect]
	[/trait]
#enddef

#define TRAIT_BROKEN
	[trait]
		id=broken
		male_name= _"broken"
		female_name= _"female^broken"
		generate_description=false
		description= _"This unit has fought too many battles and has seen too many friends die, lacks the vigour of life but knows many tricks to avoid getting hit"
		[effect]
			apply_to=defense
			replace=false
			[defense]
				frozen=-10
				shallow_water=-10
				deep_water=-10
				reef=-10
				flat=-10
				castle=-10
				village=-10
				forest=-10
				cave=-10
				hills=-10
				mountains=-10
				fungus=-10
				swamp_water=-10
				sand=-10
			[/defense]
		[/effect]
		[effect]
			apply_to=attack
			increase_attacks=-1
		[/effect]
		[effect]
			apply_to=movement
			increase=-1
		[/effect]
	[/trait]
#enddef

#define TRAIT_CYNIC
	[trait]
		id=cynic
		male_name= _"cynic"
		female_name= _"female^cynic"
		generate_description=false
		description= _"This unit has fought so many monsters that he subconsciously defies magic, becoming more resistant to arcane damage"
		[effect]
			apply_to=resistance
			replace=false
			[resistance]
				arcane=-50
			[/resistance]
		[/effect]
	[/trait]
#enddef

#define SCHEDULE_FIMBULWINTER
	[time]
		id=fimbulwinter_dawn
		name= _ "Fimbulwinter Dawn"
		image=misc/schedule-snowstorm-twilight.png
		lawful_bonus=-15
		red=-40
		green=-40
		blue=-20
	[/time]
	[time]
		id=fimbulwinter_day
		name= _ "Fimbulwinter Day"
		image=misc/schedule-snowstorm-day.png
		lawful_bonus=10
		red=-20
		green=-20
		blue=-20
	[/time]
	[time]
		id=fimbulwinter_day
		name= _ "Fimbulwinter Day"
		image=misc/schedule-snowstorm-day.png
		lawful_bonus=10
		red=-20
		green=-20
		blue=-20
	[/time]
	[time]
		id=fimbulwinter_day
		name= _ "Fimbulwinter Day"
		image=misc/schedule-snowstorm-day.png
		lawful_bonus=10
		red=-20
		green=-20
		blue=-20
	[/time]
	[time]
		id=fimbulwinter_dusk
		name= _ "Fimbulwinter Dusk"
		image=misc/schedule-snowstorm-twilight.png
		lawful_bonus=-15
		red=-40
		green=-40
		blue=-20
	[/time]
	[time]
		id=fimbulwinter_night
		name= _ "Fimbulwinter Night"
		image=misc/schedule-snowstorm-night.png
		lawful_bonus=-40
		red=-55
		green=-50
		blue=-30
	[/time]
	[time]
		id=fimbulwinter_dawn
		name= _ "Fimbulwinter Dawn"
		image=misc/schedule-snowstorm-twilight.png
		lawful_bonus=-15
		red=-40
		green=-40
		blue=-20
	[/time]
	[time]
		id=fimbulwinter_day
		name= _ "Fimbulwinter Day"
		image=misc/schedule-snowstorm-day.png
		lawful_bonus=10
		red=-20
		green=-20
		blue=-20
	[/time]
	[time]
		id=fimbulwinter_day
		name= _ "Fimbulwinter Day"
		image=misc/schedule-snowstorm-day.png
		lawful_bonus=10
		red=-20
		green=-20
		blue=-20
	[/time]
	[time]
		id=fimbulwinter_day
		name= _ "Fimbulwinter Day"
		image=misc/schedule-snowstorm-day.png
		lawful_bonus=10
		red=-20
		green=-20
		blue=-20
	[/time]
	[time]
		id=fimbulwinter_dusk
		name= _ "Fimbulwinter Dusk"
		image=misc/schedule-snowstorm-twilight.png
		lawful_bonus=-15
		red=-40
		green=-40
		blue=-20
	[/time]
	[time]
		id=fimbulwinter_night
		name= _ "Fimbulwinter Night"
		image=misc/schedule-snowstorm-night.png
		lawful_bonus=-40
		red=-55
		green=-50
		blue=-30
	[/time]
	[time]
		id=fimbulwinter_night
		name= _ "Fimbulwinter Night"
		image=misc/schedule-snowstorm-night.png
		lawful_bonus=-40
		red=-55
		green=-50
		blue=-30
	[/time]
	[time]
		id=fimbulwinter_night
		name= _ "Fimbulwinter Night"
		image=misc/schedule-snowstorm-night.png
		lawful_bonus=-40
		red=-55
		green=-50
		blue=-30
	[/time]
	[time]
		id=fimbulwinter_night
		name= _ "Fimbulwinter Night"
		image=misc/schedule-snowstorm-night.png
		lawful_bonus=-40
		red=-55
		green=-50
		blue=-30
	[/time]
#enddef

#define DESERT_SUN
	[time]
		id=dawn_desert_loti
		name= _ "Dawn"
		image=misc/time-schedules/default/schedule-dawn.png
		red=-15
		green=-15
		sound=ambient/morning.ogg
		lawful_bonus=5
	[/time]
	[time]
		id=morning_desert_loti
		name= _ "Morning"
		image=misc/time-schedules/default/schedule-morning.png
		lawful_bonus=30
		red=5
		green=5
	[/time]
	[time]
		id=afternoon_desert_loti
		name= _ "Afternoon"
		image=misc/time-schedules/default/schedule-afternoon.png
		lawful_bonus=30
		red=5
		green=5
	[/time]
	[time]
		id=dusk_desert_loti
		name= _ "Dusk"
		image=misc/time-schedules/default/schedule-dusk.png
		green=-15
		blue=-15
		sound=ambient/night.ogg
		lawful_bonus=5
	[/time]
	[time]
		id=first_watch_desert_loti
		name= _ "First Watch"
		image=misc/time-schedules/default/schedule-firstwatch.png
		lawful_bonus=-20
		red=-35
		green=-35
		blue=-10
	[/time]
	[time]
		id=second_watch_desert_loti
		name= _ "Second Watch"
		image=misc/time-schedules/default/schedule-secondwatch.png
		lawful_bonus=-20
		red=-35
		green=-35
		blue=-10
	[/time]
#enddef
#define AI_OVERHAUL_PLACE SIDE

	[ai]
		aggression=1.0
	[/ai]
	# The micro AI is added elsewhere

#enddef
#define AI_OVERHAUL_PLACE_2 SIDE

	[ai]
		aggression=1.0
	[/ai]

#enddef

#define DISABLE_UPKEEP SIDE
	[event]
		name=unit placed
		id=original_upkeep
		first_time_only=no
		[filter]
			side={SIDE}
		[/filter]
		[filter_condition]
			[variable]
				name=unit.upkeep
				not_equals=loyal
			[/variable]
		[/filter_condition]
		[modify_unit]
			[filter]
				find_in=unit
			[/filter]
			[variables]
				original_upkeep=$this_unit.upkeep
			[/variables]
			upkeep=loyal
			hitpoints=$this_unit.hitpoints
			status=$this_unit.status
		[/modify_unit]
		[deny_undo]
		[/deny_undo]
	[/event]

	[event]
		name=victory
		id=original_upkeep
		[modify_unit]
			[filter]
				side={SIDE}
			[/filter]
			[filter_condition]
				[variable]
					name=$this_unit.variables.original_upkeep
					not_equals=
				[/variable]
			[/filter_condition]
			upkeep=$this_unit.variables.original_upkeep
			[variables]
				original_upkeep=
			[/variables]
		[/modify_unit]
	[/event]
	[event]
		name=prestart
		[modify_side]
			side={SIDE}
			village_gold=0
			income=-2
		[/modify_side]
	[/event]
#enddef

#define DAWN1
	[time]
		id=dawn1
		name= _ "First Dawn"
		image=misc/time/1dawn1.png
		red=-20
		green=-20
	[/time]
#enddef

#define DAWN2
	[time]
		id=dawn2
		name= _ "Second Dawn"
		image=misc/time/7dawn2.png
		red=-20
		green=-20
	[/time]
#enddef

#define MORNING1
	[time]
		id=morning1
		name= _ "First Morning"
		image=misc/time/2morning1.png
		lawful_bonus=25
	[/time]
#enddef

#define MORNING2
	[time]
		id=morning2
		name= _ "Second Morning"
		image=misc/time/8morning2.png
		lawful_bonus=25
	[/time]
#enddef

#define MIDDAY1
	[time]
		id=midday1
		name= _ "First Midday"
		image=misc/time/3midday1.png
		lawful_bonus=25
	[/time]
#enddef

#define MIDDAY2
	[time]
		id=midday2
		name= _ "Second Midday"
		image=misc/time/9midday2.png
		lawful_bonus=25
	[/time]
#enddef

#define AFTERNOON1
	[time]
		id=afternoon1
		name= _ "First Afternoon"
		image=misc/time/4afternoon1.png
		lawful_bonus=25
	[/time]
#enddef

#define AFTERNOON2
	[time]
		id=afternoon2
		name= _ "Second Afternoon"
		image=misc/time/10afternoon2.png
		lawful_bonus=25
	[/time]
#enddef

#define DUSK1
	[time]
		id=dusk1
		name= _ "First Dusk"
		image=misc/time/5dusk1.png
		green=-20
		blue=-20
	[/time]
#enddef

#define DUSK2
	[time]
		id=dusk2
		name= _ "Second Dusk"
		image=misc/time/11dusk2.png
		green=-20
		blue=-20
	[/time]
#enddef

#define SHORTDARK
	[time]
		id=short_dark
		name= _ "Short Dark"
		image=misc/time/6shortdark.png
		lawful_bonus=-25
		red=-40
		green=-40
		blue=-10
	[/time]
#enddef

#define LONGDARK1
	[time]
		id=long_dark1
		name= _ "Long Dark (1)"
		image=misc/time/12longdark1.png
		lawful_bonus=-25
		red=-40
		green=-40
		blue=-10
	[/time]
#enddef

#define LONGDARK2
	[time]
		id=long_dark2
		name= _ "Long Dark (2)"
		image=misc/time/13longdark2.png
		lawful_bonus=-25
		red=-40
		green=-40
		blue=-10
	[/time]
#enddef

#use same image as second watch

#define LONGDARK3
	[time]
		id=long_dark3
		name= _ "Long Dark (3)"
		image=misc/time/14longdark3.png
		lawful_bonus=-25
		red=-40
		green=-40
		blue=-10
	[/time]
#enddef

#define LONGDARK4
	[time]
		id=long_dark4
		name= _ "Long Dark (4)"
		image=misc/time/15longdark4.png
		lawful_bonus=-25
		red=-40
		green=-40
		blue=-10
	[/time]
#enddef

#define TWO_SUNS_DEFAULT_SCHEDULE
	{DAWN1}
	{MORNING1}
	{MIDDAY1}
	{AFTERNOON1}
	{DUSK1}
	{SHORTDARK}
	{DAWN2}
	{MORNING2}
	{MIDDAY2}
	{AFTERNOON2}
	{DUSK2}
	{LONGDARK1}
	{LONGDARK2}
	{LONGDARK3}
	{LONGDARK4}
#enddef

#define TEXT_COUNT VARIABLE_NAME FROM TO
	[if]
		[variable]
			name={VARIABLE_NAME}
			equals="{FROM}"
		[/variable]
		[then]
			{VARIABLE {VARIABLE_NAME} {TO}}
		[/then]
	[/if]
#enddef

#define UPDATE_ATTACKS X Y
	# This is some kind of UPDATE_STATS that happens on a settable location

	[update_stats]
		x,y={X},{Y}
	[/update_stats]
#enddef

#define VAMPIRE_TRANSFORMATION ORIGINAL TRANSFORMED SIDE
	# The definition of vampirism is quite simple. If a unit is hit by a unit allegiant to a vampiric side, it has a 2% chance to advance to a vampiric
	# unit (type depending on its original type) and change the side to the vampiric side. Level 3 and higher units are not affected.
	[event]
		name=attacker hits
		first_time_only=no

		[filter]
			side={SIDE}
		[/filter]
		[filter_second]
			type={ORIGINAL}
		[/filter_second]
		{VARIABLE_OP did_transform rand (0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1)}
		[if]
			[variable]
				name=did_transform
				numerical_equals=1
			[/variable]
			[then]
				{ADVANCE_UNIT x,y=$x2,$y2 {TRANSFORMED}}
				{MODIFY_UNIT x,y=$x2,$y2 side {SIDE}}
			[/then]
		[/if]
	[/event]
	[event]
		name=defender hits
		first_time_only=no

		[filter]
			type={ORIGINAL}
		[/filter]
		[filter_second]
			side={SIDE}
		[/filter_second]
		{VARIABLE_OP did_transform rand (0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1)}
		[if]
			[variable]
				name=did_transform
				numerical_equals=1
			[/variable]
			[then]
				{ADVANCE_UNIT x,y=$x1,$y1 {TRANSFORMED}}
				{MODIFY_UNIT x,y=$x1,$y1 side {SIDE}}
			[/then]
		[/if]
		{CLEAR_VARIABLE did_transform}
	[/event]
#enddef
#define VAMPIRISM SIDE
	{VAMPIRE_TRANSFORMATION "Peasant" "Vampire Spearman" {SIDE}}
	{VAMPIRE_TRANSFORMATION "Ruffian" "Vampire Spearman" {SIDE}}
	{VAMPIRE_TRANSFORMATION "Thug" "Vampire Spearman" {SIDE}}
	{VAMPIRE_TRANSFORMATION "Thief" "Vampire Fencer" {SIDE}}
	{VAMPIRE_TRANSFORMATION "Footpad" "Vampire Fencer" {SIDE}}
	{VAMPIRE_TRANSFORMATION "Poacher" "Vampire Bowman" {SIDE}}
	{VAMPIRE_TRANSFORMATION "Trapper" "Vampire Longbowman" {SIDE}}
	{VAMPIRE_TRANSFORMATION "Outlaw" "Vampire Duelist" {SIDE}}
	{VAMPIRE_TRANSFORMATION "Rogue" "Vampire Duelist" {SIDE}}
	{VAMPIRE_TRANSFORMATION "Bandit" "Vampire Swordsman" {SIDE}}
	{VAMPIRE_TRANSFORMATION "Royal Guard" "Vampire Guard" {SIDE}}
	{VAMPIRE_TRANSFORMATION "Master at Arms" "Vampire Master" {SIDE}}
	{VAMPIRE_TRANSFORMATION "Master Bowman" "Vampire Master Bowman" {SIDE}}
	{VAMPIRE_TRANSFORMATION "Iron Mauler" "Vampire Iron Mauler" {SIDE}}
	{VAMPIRE_TRANSFORMATION "Cavalier" "Vampire Cavalier" {SIDE}}
#enddef

#define RECALL_FROM_VARIABLE VAR X Y
	[if]
		[variable]
			name={VAR}.length
			greater_than_equal_to=1
		[/variable]
		[then]
			[sort_unit_list]
				unit_list={VAR}
			[/sort_unit_list]
			[recall_from_variable]
				from={VAR}
				to=chose
			[/recall_from_variable]
			[unstore_unit]
				variable={VAR}[$chose]
				x,y={X},{Y}
				find_vacant=yes
			[/unstore_unit]
			{CLEAR_VARIABLE {VAR}[$chose],chose}
		[/then]
		[else]
			[message]
				speaker=narrator
				image="wesnoth-icon.png"
				message=_"No units available."
			[/message]
		[/else]
	[/if]
#enddef

#define CH08G_OBSERVER SIDE TYPE X Y
	[unit]
		side={SIDE}
		type={TYPE}
		x={X}
		y={Y}
		generate_name=yes
		random_traits=yes
		random_gender=yes
		upkeep=loyal
		[modifications]
			[object]
				[effect]
					apply_to=movement_costs
					replace="true"
					[movement_costs]
						flat={UNREACHABLE}
						sand={UNREACHABLE}
						forest={UNREACHABLE}
						village={UNREACHABLE}
					[/movement_costs]
				[/effect]
			[/object]
		[/modifications]
	[/unit]
#enddef

#define REMOVE_TRAIT_BY_ID UNIT TRAIT_ID
	[for]
		array={UNIT}.modifications.trait
		variable=rtbi_for_index      # in case {UNIT} happens to contain "[$i]"
		[do]
			[if]
				[variable]
					name={UNIT}.modifications.trait[$rtbi_for_index].id
					equals={TRAIT_ID}
				[/variable]
				[then]
					{CLEAR_VARIABLE {UNIT}.modifications.trait[$rtbi_for_index]}
					{VARIABLE_OP rtbi_for_index sub 1}
				[/then]
			[/if]
		[/do]
	[/for]
#enddef

#define GENERIC_UNIT_PASSABLE SIDE TYPE X Y
	# Copied from data/core/macros/unit-utils.cfg, with passable=yes added
	# Creates a generic unit of TYPE belonging to SIDE at X,Y, which has a
	# random name, gender and traits (just like a recruited unit).
	#
	[unit]
		side={SIDE}
		type={TYPE}
		x={X}
		y={Y}
		generate_name=yes
		random_traits=yes
		random_gender=yes
		upkeep=full
		passable=yes
	[/unit]
#enddef

#define  MOVE_SIDE_TO SIDE X Y
	# Move all units on SIDE to X,Y
	[move_unit]
		side={SIDE}
		to_x={X}
		to_y={Y}
	[/move_unit]
#enddef

#define TELEPORT_TO_LEADER_MENU LEADER EASY NORMAL HARD
	[set_menu_item]
		id=teleport_to_{LEADER}
		description= _ "Teleport units to {LEADER}"
		[show_if]
			[have_unit]
				x,y=$x1,$y1
				id={LEADER}
			[/have_unit]
			[and]
				[variable]
					name=teleport_wait
					greater_than_equal_to=$teleport_interval
				[/variable]
			[/and]
		[/show_if]
		[command]
			{VARIABLE teleport_wait 0}
			[store_unit]
				[filter]
					side=1
					[not]
						id={LEADER}
					[/not]
				[/filter]
				kill=no
				variable=teleport_store
			[/store_unit]
			[foreach]
				array=teleport_store
				[do]
					[teleport]
						[filter]
							id=$this_item.id
						[/filter]
						x,y=$x1,$y1
						clear_shroud=yes
						animate=no
					[/teleport]
				[/do]
			[/foreach]
			{CLEAR_VARIABLE teleport_store}
		[/command]
	[/set_menu_item]
	[set_menu_item]
		id=cannot_teleport_to_{LEADER}
		description= _ "<span font-style='oblique'>Spell to teleport units to {LEADER} is recharging</span>"
		[show_if]
			[have_unit]
				x,y=$x1,$y1
				id={LEADER}
			[/have_unit]
			[and]
				[variable]
					name=teleport_wait
					less_than=$teleport_interval
				[/variable]
			[/and]
		[/show_if]
		[command]
		[/command]
	[/set_menu_item]
	# BEGIN backward compatibility
	[clear_menu_item]
		id=zz_ch6s9_teleport
	[/clear_menu_item]
	# END backward compatibility

	[event]
		first_time_only=no        # for debugging
		name=prestart
		id=teleport_leader_prestart
#ifdef EASY
		{VARIABLE teleport_interval {EASY}}
#endif
#ifdef NORMAL
		{VARIABLE teleport_interval {NORMAL}}
#endif
#ifdef HARD
		{VARIABLE teleport_interval {HARD}}
#endif

		{VARIABLE teleport_wait $teleport_interval}
	[/event]
	[event]
		name=new turn
		first_time_only=yes
#ifdef EASY
		{VARIABLE teleport_interval {EASY}}
#endif
#ifdef NORMAL
		{VARIABLE teleport_interval {NORMAL}}
#endif
#ifdef HARD
		{VARIABLE teleport_interval {HARD}}
#endif
		{VARIABLE teleport_wait $teleport_interval}
	[/event]
	[event]
		name=new turn
		first_time_only=no
		{VARIABLE_OP teleport_wait add 1}
	[/event]
	[event]
		name=scenario_end
		{CLEAR_VARIABLE teleport_wait,teleport_interval}
		[clear_menu_item]
			id=teleport_to_{LEADER}
		[/clear_menu_item]
		[clear_menu_item]
			id=cannot_teleport_to_{LEADER}
		[/clear_menu_item]
	[/event]
#enddef

#define EVASION ABILITY
	[event]
		name=attacker_misses
		id=evasion_taunt
		[filter_second]
			ability={ABILITY}
		[/filter_second]
		[set_variables]
			name=msgs
			[value]
				message=_"Hahaha, you think you can match my dexterity, $unit.name|?"
			[/value]
			[value]
				message=_"Hahaha, nobody can match my dexterity!"
			[/value]
			[value]
				message=_"Missed me by that <span font='oblique'>that</span> much"   # Translation hint: TV show Get Smart
			[/value]
			[value]
				message=_"Hey man, nice shot!"  # Translation hint: Really lame pop song by American band Filter
			[/value]
			[value]
				message=_"A swing and a miss!"  # Translation hint: Movie named Major League
			[/value]
			[value]
				message=_"Just a <span font='oblique'>bit</span> outside!"  # Translation hint: Movie named Major League
			[/value]
		[/set_variables]
		{VARIABLE_OP rand rand (1..$msgs.length)}
		{VARIABLE_OP rand sub 1}
		{VARIABLE msg $msgs[$rand].message}
		[message]
			speaker=second_unit
			message=$msg
		[/message]
		{CLEAR_VARIABLE msgs,rand,msg}
	[/event]
	[event]
		name=attacker_misses
		id=evasion
		first_time_only=no
		[filter_second]
			ability={ABILITY}
		[/filter_second]
		[store_locations]
			[filter_adjacent_location]
				x,y=$x2,$y2
			[/filter_adjacent_location]
			[not]
				terrain="*^X*,Q*,X*,Zic"
			[/not]
			variable=dodge_locs
		[/store_locations]
		[foreach]
			array=dodge_locs
			[do]
				[if]
					[have_unit]
						x,y=$this_item.x,$this_item.y
					[/have_unit]
					[else]
						{MOVE_UNIT id=$second_unit.id $this_item.x $this_item.y}
						[break][/break]
					[/else]
				[/if]
			[/do]
		[/foreach]
		{CLEAR_VARIABLE dodge_locs}
	[/event]
#enddef

#define REMOVE_INCINERATION UNIT
	{CLEAR_VARIABLE {UNIT}.status.incinerated}
	{CLEAR_VARIABLE {UNIT}.variables.incinerator}
	[for]
		array={UNIT}.modifications.object
		variable=rem_inc_var
		[do]
			[if]
				[variable]
					name={UNIT}.modifications.object[$rem_inc_var].incineration
					equals=yes
				[/variable]
				[then]
					{CLEAR_VARIABLE {UNIT}.modifications.object[$rem_inc_var]}
				[/then]
			[/if]
		[/do]
	[/for]
#enddef
